apply plugin: "com.android.library"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "kotlin-parcelize"
apply plugin: "io.hyperswitch.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    bundleAssetName = "hyperswitch.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]

    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace 'io.hyperswitch'
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName version
        resConfigs "en"
        resValue 'string', "CODE_PUSH_APK_BUILD_TIME", String.format("\"%d\"", System.currentTimeMillis())
        buildConfigField "String", "VERSION_NAME", "\"${version}\""
        buildConfigField "boolean", "IS_HERMES_ENABLED", hermesEnabled
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", newArchEnabled
    }
    buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
        buildTypes.all { buildType ->
            if (!['debug', 'release'].contains(buildType.name)) {
                buildType.matchingFallbacks = ['debug', 'release']
            }
        }
    }
    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }

        // exclude "lib/**/libhermes.so"
        // exclude "lib/**/libreactnativejni.so"
        // exclude "lib/**/libfolly_runtime.so"
        // exclude "lib/**/libc++_shared.so"
        // exclude "lib/**/libjsinspector.so"
        // exclude "lib/**/libhermes_executor.so"
        // exclude "lib/**/libyoga.so"
        // exclude "lib/**/libreact_devsupportjni.so"
        // exclude "lib/**/libfbjni.so"
        // exclude "lib/**/libglog.so"
        // exclude "lib/**/libreact_render_debug.so"
        // exclude "lib/**/libjsi.so"
        // exclude "lib/**/libreact_featureflagsjni.so"
        // exclude "lib/**/libreactnativeblob.so"
        // exclude "lib/**/libreact_featureflags.so"
        // exclude "lib/**/libreact_utils.so"
        // exclude "lib/**/libreact_debug.so"
        // exclude "lib/**/libruntimeexecutor.so"
        // exclude "lib/**/libreact_render_consistency.so"

        exclude "lib/**/libfabricjni.so"
        exclude "lib/**/libreact_codegen_rncore.so"
        exclude "lib/**/librninstance.so"
        exclude "lib/**/librrc_view.so"
        exclude "lib/**/libreact_nativemodule_dom.so"
        exclude "lib/**/librrc_textinput.so"
        exclude "lib/**/libreact_nativemodule_core.so"
        exclude "lib/**/libreact_render_core.so"
        exclude "lib/**/libreact_render_uimanager_consistency.so"
        exclude "lib/**/libnative-imagetranscoder.so"
        exclude "lib/**/librrc_image.so"
        exclude "lib/**/libeb90.so"
        exclude "lib/**/libhermesinstancejni.so"
        exclude "lib/**/libreact_newarchdefaults.so"
        exclude "lib/**/libturbomodulejsijni.so"
        exclude "lib/**/libreact_render_componentregistry.so"
        exclude "lib/**/libjscexecutor.so"
        exclude "lib/**/libuimanagerjni.so"
        exclude "lib/**/libreact_nativemodule_defaults.so"
        exclude "lib/**/libreact_performance_timeline.so"
        exclude "lib/**/libmapbufferjni.so"
        exclude "lib/**/librrc_legacyviewmanagerinterop.so"
        exclude "lib/**/libjscinstance.so"
        exclude "lib/**/libreact_nativemodule_featureflags.so"
        exclude "lib/**/libreact_nativemodule_microtasks.so"
        exclude "lib/**/libreact_render_mapbuffer.so"
        exclude "lib/**/libreact_render_observers_events.so"
        exclude "lib/**/libreact_render_imagemanager.so"
        exclude "lib/**/libreact_render_graphics.so"
        exclude "lib/**/libreact_render_element.so"
        exclude "lib/**/libjsijniprofiler.so"
        exclude "lib/**/libnative-filters.so"
        exclude "lib/**/libimagepipeline.so"

        // exclude "lib/**/libtensorflowlite_jni.so"

        exclude "lib/**/libsentry.so"
        exclude "lib/**/libsentry-android.so"

    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    implementation("androidx.appcompat:appcompat")
    implementation("androidx.activity:activity-ktx")
    implementation("androidx.compose.ui:ui-graphics")
    implementation("com.google.android.material:material")
    implementation("com.google.android.gms:play-services-wallet")
    implementation("org.greenrobot:eventbus")
    implementation project(':hyperswitch-sdk-android-lite')

    constraints {
        implementation("androidx.appcompat:appcompat") {
            version {
                prefer '1.6.1'
            }
        }
        implementation("androidx.activity:activity-ktx") {
            version {
                prefer '1.6.1'
            }
        }
        implementation("androidx.compose.ui:ui-graphics") {
            version {
                prefer '1.4.3'
            }
        }
        implementation("com.google.android.material:material") {
            version {
                prefer '1.9.0'
            }
        }
        implementation("com.google.android.gms:play-services-wallet") {
            version {
                prefer '19.2.1'
            }
        }
        implementation("org.greenrobot:eventbus") {
            version {
                prefer '3.3.1'
            }
        }
    }
}

def appProject = rootProject.allprojects.find { it.plugins.hasPlugin('com.android.application') }
try {
    appProject.android.buildTypes.debug.manifestPlaceholders += [applicationName: "io.hyperswitch.react.MainApplication"]
    appProject.android.buildTypes.profile.manifestPlaceholders += [applicationName: "io.hyperswitch.react.MainApplication"]
    appProject.android.buildTypes.release.manifestPlaceholders += [applicationName: "io.hyperswitch.react.MainApplication"]

    appProject.android.packagingOptions.jniLibs.useLegacyPackaging = true

    appProject.android.packagingOptions.exclude "lib/**/libfabricjni.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_codegen_rncore.so"
    appProject.android.packagingOptions.exclude "lib/**/librninstance.so"
    appProject.android.packagingOptions.exclude "lib/**/librrc_view.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_nativemodule_dom.so"
    appProject.android.packagingOptions.exclude "lib/**/librrc_textinput.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_nativemodule_core.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_render_core.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_render_uimanager_consistency.so"
    appProject.android.packagingOptions.exclude "lib/**/libnative-imagetranscoder.so"
    appProject.android.packagingOptions.exclude "lib/**/librrc_image.so"
    appProject.android.packagingOptions.exclude "lib/**/libeb90.so"
    appProject.android.packagingOptions.exclude "lib/**/libhermesinstancejni.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_newarchdefaults.so"
    appProject.android.packagingOptions.exclude "lib/**/libturbomodulejsijni.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_render_componentregistry.so"
    appProject.android.packagingOptions.exclude "lib/**/libjscexecutor.so"
    appProject.android.packagingOptions.exclude "lib/**/libuimanagerjni.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_nativemodule_defaults.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_performance_timeline.so"
    appProject.android.packagingOptions.exclude "lib/**/libmapbufferjni.so"
    appProject.android.packagingOptions.exclude "lib/**/librrc_legacyviewmanagerinterop.so"
    appProject.android.packagingOptions.exclude "lib/**/libjscinstance.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_nativemodule_featureflags.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_nativemodule_microtasks.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_render_mapbuffer.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_render_observers_events.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_render_imagemanager.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_render_graphics.so"
    appProject.android.packagingOptions.exclude "lib/**/libreact_render_element.so"
    appProject.android.packagingOptions.exclude "lib/**/libjsijniprofiler.so"
    appProject.android.packagingOptions.exclude "lib/**/libnative-filters.so"
    appProject.android.packagingOptions.exclude "lib/**/libimagepipeline.so"

    appProject.android.packagingOptions.exclude "lib/**/libsentry.so"
    appProject.android.packagingOptions.exclude "lib/**/libsentry-android.so"
} catch (ignored) {
}